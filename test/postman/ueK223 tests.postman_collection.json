{
	"info": {
		"_postman_id": "8e97720c-fdd2-43be-a0b3-dfa1f8f9e24c",
		"name": "ueK223 tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25269173"
	},
	"item": [
		{
			"name": "login as admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const token = pm.response.headers.get(\"Authorization\");\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.environment.set(\"admintoken\", token);\r",
							"let jsonData = pm.response.json();\r",
							"pm.environment.set(\"adminid\", jsonData[\"id\"]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\" : \"admin@example.com\",\r\n    \"password\" : \"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/user/login",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin creates new user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admintoken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\" :\"Hans\",\r\n    \"lastName\" : \"Fisch\",\r\n    \"email\" : \"hans@fisch\",\r\n    \"password\" : \"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/users/register",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin gets all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Hans\");\r",
							"    pm.expect(pm.response.text()).to.include(\"Fisch\");\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"pm.environment.set(\"newuser\", jsonData[2][\"id\"]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admintoken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/users/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "admin edits Hans Fisch",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Hans\");\r",
							"    pm.expect(pm.response.text()).to.include(\"Egli\");\r",
							"});\r",
							"\r",
							"pm.test(\"Hans roles don't change\", function() {\r",
							"    pm.expect(pm.response.text()).to.include(\"DEFAULT\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admintoken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\" :\"Hans\",\r\n    \"lastName\" : \"Egli\",\r\n    \"email\" : \"hans@egli\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/users/{{newuser}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"users",
						"{{newuser}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin gets all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Hans\");\r",
							"    pm.expect(pm.response.text()).to.include(\"Egli\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admintoken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/users",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin creates imagepost",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"pm.environment.set(\"adminposttolike\", jsonData[\"id\"]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admintoken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"imageUrl\" : \"https://upload.wikimedia.org/wikipedia/commons/b/b1/Hot_dog_with_mustard.png\",\r\n    \"description\" : \"only id\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/images/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"images",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "admin creates imagepost Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admintoken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"imageUrl\" : \"https://upload.wikimedia.org/wikipedia/commons/b/b1/Hot_dog_with_mustard.png\",\r\n    \"description\" : \"only id\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/images/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"images",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "admin creates imagepost Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admintoken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"imageUrl\" : \"https://upload.wikimedia.org/wikipedia/commons/b/b1/Hot_dog_with_mustard.png\",\r\n    \"description\" : \"only id\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/images/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"images",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "admin gets all posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admintoken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/images/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"images",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "admin gets paginated imageposts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Post Count correct\", function () {\r",
							"    const imagePostCount = pm.response.json().length;\r",
							"    pm.expect(imagePostCount).to.equals(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admintoken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/images?page=0&page-len=2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"images"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "page-len",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "admin creates invalid imagepost",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"URL\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admintoken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"imageUrl\" : \"mus\",\r\n    \"description\" : \"invalid image address\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/images/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"images",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "admin puts with Invalid ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admintoken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\" :\"Bruh\",\r\n    \"lastName\" : \"Egli\",\r\n    \"email\" : \"hans@egli\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/users/ba804cb9-fa14-42a5-adad-be488742fa54",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"users",
						"ba804cb9-fa14-42a5-adad-be488742fa54"
					]
				}
			},
			"response": []
		},
		{
			"name": "login as tyler(default)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Tyler\");\r",
							"});\r",
							"const token = pm.response.headers.get(\"Authorization\");\r",
							"pm.environment.set(\"tyler\", token);\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"pm.environment.set(\"tylerid\", jsonData[\"id\"]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\" : \"user@example.com\",\r\n    \"password\" : \"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/user/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all images",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tyler}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/images",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"images"
					]
				}
			},
			"response": []
		},
		{
			"name": "tyler(default) creates post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"tyler post\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tyler}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"imageUrl\" : \"https://upload.wikimedia.org/wikipedia/commons/b/b1/Hot_dog_with_mustard.png\",\r\n    \"description\" : \"tyler post\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/images",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"images"
					]
				}
			},
			"response": []
		},
		{
			"name": "tyler(default) tries to get all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tyler}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "tyler(default) gets all admin posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"James\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tyler}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/images/author/{{adminid}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"images",
						"author",
						"{{adminid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin get tyler's(default) posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"pm.environment.set(\"tylerpostid\", jsonData[0][\"id\"]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admintoken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/images/author/{{tylerid}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"images",
						"author",
						"{{tylerid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin edit's tyler's(default) post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"I changed tyler's post\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admintoken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"imageUrl\" : \"bruh-blub.png\",\r\n    \"description\" : \"I changed tyler's post\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/images/{{tylerpostid}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"images",
						"{{tylerpostid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "login as hans(default)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const token = pm.response.headers.get(\"Authorization\");\r",
							"pm.environment.set(\"hanstoken\", token);\r",
							"let jsonData = pm.response.json();\r",
							"pm.environment.set(\"hansid\", jsonData[\"id\"]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\" : \"hans@egli\",\r\n    \"password\" : \"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/user/login",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "hans(default) edit's tyler's(default) post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{hanstoken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"imageUrl\" : \"hans-is-mean-and-edits-a-tyler-post.png\",\r\n    \"description\" : \"I changed tyler's post\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/images/{{tylerpostid}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"images",
						"{{tylerpostid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "tyler(default) edits his post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is my own post\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tyler}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"imageUrl\" : \"final-tyler-post.png\",\r\n    \"description\" : \"This is my own post\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/images/{{tylerpostid}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"images",
						"{{tylerpostid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "hans(default) deletes tyler(default) post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{hansid}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/images/{{tylerpostid}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"images",
						"{{tylerpostid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "tyler(default) deletes his post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tyler}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/images/{{tylerpostid}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"images",
						"{{tylerpostid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "tyler(default) gets all his posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    const imagePostCount = Object.keys(pm.response.json()).length;\r",
							"    pm.expect(imagePostCount).to.eql(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tyler}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/images/author/{{tylerid}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"images",
						"author",
						"{{tylerid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "tyler(default) creates new hans(default) post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Tyler\");\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"pm.environment.set(\"newesttylerpost\", jsonData[\"id\"]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tyler}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"imageUrl\" : \"https://upload.wikimedia.org/wikipedia/commons/b/b1/Hot_dog_with_mustard.png\",\r\n    \"author\" : {\r\n        \"id\": \"{{hansid}}\"\r\n    },\r\n    \"description\" : \"hans post\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/images",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"images"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin deletes tyler's(default) post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admintoken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/images/{{newesttylerpost}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"images",
						"{{newesttylerpost}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin likes his post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Post has 1 like\", function(){\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.likes.length).to.equal(1);\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admintoken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{host}}/api/images/like/{{adminposttolike}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"images",
						"like",
						"{{adminposttolike}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin unlikes his post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Post has 1 like\", function(){\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.likes.length).to.equal(0);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admintoken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{host}}/api/images/like/{{adminposttolike}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"images",
						"like",
						"{{adminposttolike}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin likes his post Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Post has 1 like\", function(){\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.likes.length).to.equal(1);\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admintoken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{host}}/api/images/like/{{adminposttolike}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"images",
						"like",
						"{{adminposttolike}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "tyler(default) creates post Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"tyler post\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tyler}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"imageUrl\" : \"https://upload.wikimedia.org/wikipedia/commons/b/b1/Hot_dog_with_mustard.png\",\r\n    \"description\" : \"tyler post\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/images",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"images"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin deletes tyler(default)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admintoken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{tylerid}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{tylerid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin creates stefan(default) without pwd",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Stefan\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admintoken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\" :\"Stefan\",\r\n    \"lastName\" : \"Laux\",\r\n    \"email\" : \"stefan@laux\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users/registerUser",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"registerUser"
					]
				}
			},
			"response": []
		},
		{
			"name": "login as stefan(default)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\" : \"stefan@laux\",\r\n    \"password\" : \"StefanLaux\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/user/login",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}